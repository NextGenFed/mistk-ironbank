swagger: '2.0'
info:
  version: 1.3.0
  title: Model Integration Software ToolKit - Agent
basePath: /v1/mistk/agent
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:

##########################
# Agent Plugin Endpoints #
##########################

  /initialize:
    post:
      operationId: initializeAgent
      x-swagger-router-controller: mistk.agent.service
      summary: Initialize the model
      description: Instructs the model instance to initialize.
      tags: [Agent Instance Endpoint]
      parameters:
      - in: body
        name: initializationParameters
        description: >
          Initialization parameters for the model including the objectives, properties, and hparams.
          Objectives are a list of objectives for this model instance from the following options
          ['training', 'prediction', 'streaming_prediction', 'transfer_learning', 'generation', 'miniaturization'].
          Properties are a dictionary of properties for this model instance.
          Hparams are a dictionary of hyperparameters for this model instance.
        required: true
        schema:
          $ref: "../smlcore/sml-api.yaml#/definitions/ModelInstanceInitParams"
      responses:
        '200':
          description: Returns 200 if the task was successfully submitted.
        '400':
          description: Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"

  /buildModel:
    post:
      operationId: buildModel
      x-swagger-router-controller: mistk.agent.service
      tags: [Agent Instance Endpoint]
      summary: Build the model
      description: Instructs the container to construct the model
      parameters:
      - in: query
        name: modelPath
        required: false
        type: string
        description: >
          A path pointing to the directory where the model can be loaded from.
      responses:
        '200':
          description: Returns 200 if the task was successfully submitted.
        '400':
          description: Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"

  /saveModel:
    post:
      operationId: saveModel
      x-swagger-router-controller: mistk.agent.service
      tags: [Agent Instance Endpoint]
      summary: Save the model snapshot
      description: >
        Instructs the container to serialize the model to the specified path
      parameters:
      - in: query
        name: modelPath
        required: true
        type: string
        description: >
          A path pointing to the directory where the model is to be saved.
      responses:
        '200':
          description: Returns 200 if the task was successfully submitted.
        '400':
          description: Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"


  /status:
    get:
      summary: Get the status of the model
      description: Retrieves the current status of the model
      x-swagger-router-controller: mistk.agent.service
      tags: [Agent Instance Endpoint]
      operationId: getStatus
      parameters:
        - name: watch
          description: >
            Watch for changes to the described resources and return them as a
            stream of add, update, and remove notifications.
            Specify resourceVersion.
          required: false
          in: query
          type: boolean
          default: "False"
        - name: resourceVersion
          description: >
            When specified with a watch call, shows changes that occur after
            that particular version of a resource. Defaults to changes from the
            beginning of history.
          required: false
          in: query
          type: integer
      responses:
        '200':
          description: Returns the status
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/AgentInstanceStatus"

  /agentRegistered:
    post:
      operationId: agentRegistered
      x-swagger-router-controller: mistk.agent.service
      tags: [Agent Instance Endpoint]
      summary: Agent registered
      description: Agent has been registered to a orchestrator
      parameters:
      - in: body
        name: agentCfg
        description: >
          A dictionary for the agent configuration from the orchestrator
        required: false
        schema:
          type: object
          additionalProperties: true
      responses:
        '200':
          description: Returns 200 if the task was successfully submitted.
        '400':
          description: Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"

  /episodeStarted:
    post:
      operationId: episodeStarted
      x-swagger-router-controller: mistk.agent.service
      tags: [Agent Instance Endpoint]
      summary: Episode started
      description: Instructs the agent that the episode has started
      parameters:
      - in: body
        name: episodeCfg
        description: >
          A dict for the episode config from the orchestrator. One key must be `obs`.
        required: false
        schema:
          type: object
          additionalProperties: true
      responses:
        '200':
          description: Returns 200 if the task was successfully submitted.
        '400':
          description: Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"

  /getAction:
    post:
      operationId: getAction
      x-swagger-router-controller: mistk.agent.service
      tags: [Agent Instance Endpoint]
      summary: Get action(s) from agent
      description: Gives the agent the observations to perform some action(s)
      parameters:
      - in: body
        name: obs
        description: >
          A dict for each agent's environmental observations it has observed
        required: true
        schema:
          type: object
          additionalProperties: true
      responses:
        '200':
          description: Returns a list of actions the agent should take
          schema:
            type: object
          additionalProperties: true
        '400':
          description: Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"

  /replayAction:
    post:
      operationId: replayAction
      x-swagger-router-controller: mistk.agent.service
      tags: [Agent Instance Endpoint]
      summary: Replay an action from agent
      description: Gives the agent the observations to replay an action for learning
      parameters:
      - in: body
        name: obs
        description: >
          A dictionary with the keys for prev_obs, rewards, actions, & new_obs
        required: true
        schema:
          type: object
          additionalProperties: true
      responses:
        '200':
          description: >
            Returns 200 if the task was successfully submitted.
        '400':
          description: Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"

  /episodeStopped:
    post:
      operationId: episodeStopped
      x-swagger-router-controller: mistk.agent.service
      summary: Episode stopped
      description: Instructs the agent that the episode has stopped
      tags: [Agent Instance Endpoint]
      responses:
        '200':
          description: >
            Returns 200 if the task was successfully submitted.
        '400':
          description: >
            Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"


  /shutdown:
    post:
      operationId: terminate
      x-swagger-router-controller: mistk.agent.service
      summary: Shut down the agent
      description: Shuts down the agent
      tags: [Agent Instance Endpoint]
      responses:
        '200':
          description: >
            Returns 200 if the task was successfully submitted.
        '400':
          description: >
            Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"

  /reset:
    post:
      operationId: reset
      x-swagger-router-controller: mistk.agent.service
      summary: Resets the model
      description: Resets the model
      tags: [Agent Instance Endpoint]
      parameters:
      - in: query
        name: unloadModel
        required: true
        type: boolean
        default: "True"
        description: >
          Unload (reset) the built model or keep the current built model
      responses:
        '200':
          description: >
            Returns 200 if the task was successfully submitted.
        '400':
          description: >
            Returns 400 if there is a task running when called.
          schema:
            $ref: "../smlcore/sml-api.yaml#/definitions/ServiceError"
        '500':
          description: General server runtime exception

  /apiVersion:
    get:
      operationId: getApiVersion
      x-swagger-router-controller: mistk.agent.service
      summary: Returns the version of the MISTK API
      description: Returns the version of the MISTK API
      tags: [Agent Instance Endpoint]
      responses:
        '200':
          description: >
            The MISTK API Version.
          schema:
            type: string
        '500':
          description: General server runtime exception


##########################
# Definitions #
##########################

definitions:
  MistkDataset:
    allOf:
      - $ref: '../smlcore/sml-api.yaml#/definitions/Dataset'
      - type: object
        properties:
          dataPath:
            type: string
    example:
      objectInfo:
        name: 'example_dataset'
        kind: 'MistkDataset'
      dataPath: '/tmp'
      modality: 'image'
      format: 'image'
  MistkMetric:
    allOf:
      - $ref: '../smlcore/sml-api.yaml#/definitions/Metric'
  MistkMetricList:
    description: A list of Metrics.
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/MistkMetric'
      continueToken:
        type: string
  MistkDataRecordList:
      allOf:
        - $ref: '../smlcore/sml-api.yaml#/definitions/DataRecordList'
  MistkDataRecord:
      allOf:
        - $ref: '../smlcore/sml-api.yaml#/definitions/DataRecord'
  MistkWatchEvent:
    allOf:
      - $ref: '../smlcore/sml-api.yaml#/definitions/WatchEvent'
  #ModelBuild:
  #  description: Parameters to build or launch a model/learner
  #  type: object
  #  properties:
  #    learner_module:
  #      type: string
  #    learner_name:
  #      type: string
  #    learner_kwargs:
  #      type: object
  #      description: Dictionary of the learner's keyword args
  #    path:
  #      type: string
